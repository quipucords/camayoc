[project]
name = "camayoc"
version = "1.8.5"
description = "A GPL-licensed Python library that facilitates functional testing of Quipucords."
authors = [
    {name = "Quipucords Dev Team", email = "quipucords@redhat.com"},
]
readme = "README.rst"
license = "GPL-3.0-only"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Quality Assurance",
]
requires-python = ">= 3.12, < 3.14"
dependencies = [
    "attrs (>= 24.2.0, < 25.0.0)",
    "dynaconf (>= 3.2.4, < 4.0.0)",
    "deepdiff (>= 8.2.0, < 9.0.0)",
    "factory_boy (>= 3.2.1, < 4.0.0)",
    "littletable (>= 3.0.1, < 4.0.0)",
    "pexpect (>= 4.8.0, < 5.0.0)",
    # playwright needs to download browsers. We do that during Jenkins agent image
    # generation to save time during execution, but that means we need to keep
    # version here in sync with version used when generating images
    "playwright==1.52.0",
    "pydantic (>= 2.6.3, < 3.0.0)",
    "pytest (>= 8.3.4, < 9.0.0)",
    "pytest-ibutsu (>= 2.2.4, < 3.0.0)",
    "pytest-playwright (>= 0.7.0, < 8.0.0)",
    "pyxdg==0.28",
    "pyyaml (>= 6.0, < 7.0)",
]

[project.urls]
Repository = "https://github.com/quipucords/camayoc"

[project.entry-points.pytest11]
camayoc = "camayoc.pytest_plugin"

[dependency-groups]
dev = [
    # For `make test-coverage`
    "pytest-cov (>= 4.0.0, < 5.0.0)",
    # For `make validate-docstrings`
    "testimony (>= 2.2.0, < 3.0.0)",
    # For `make pre-commit`
    "pre-commit (>= 4.0.1, < 5.0.0)",
    "isort (>= 5.11.4, < 6.0.0)",
    "ruff (>= 0.8.0, < 1.0.0)",
]

[build-system]
requires = ["setuptools >= 70"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
include = ["camayoc*"]
namespaces = false

[tool.pytest.ini_options]
filterwarnings = "ignore::urllib3.exceptions.InsecureRequestWarning"
markers = [
    "ssh_keyfile_path: mark test with SSH key file path mapped to /sshkeys/ on the server (deselect with '-m \"not ssh_keyfile_path\"')",
    "runs_scan: tests that run scans (might be slow!)",
    "slow: tests that take a long time to run (on average, more than 30 seconds)",
    "nightly_only: tests to execute only during nightly (or full) run, i.e. not during PR check; note that actual selection is implemented in discovery-ci",
    "pr_only: tests to execute only during PR check run, i.e. not during nightly run; note that actual selection is implemented in discovery-ci",
    "upgrade_only: tests to execute only during upgrade testing; note that actual selection is implemented in discovery-ci",
]

[tool.ruff]
src = [
    "camayoc",
    "tests",
]
target-version = "py311"
line-length = 100

[tool.ruff.lint]
select = [
    "C90", # mccabe complexity
    "D",   # pydocstyle
    "E",   # pycodestyle
    "F",   # pyflakes
    "I",   # isort
    "Q",   # flake8-quotes
    "W",   # pycodestyle
    "PL",  # Pylint
    "BLE", # flake8-blind-except
]
ignore = [
    "D203",
    "D403",
    "PLR2004",

    # for now, ignore missing docstrings
    "D100",
    "D101",
    "D102",
    "D103",
    "D106",
    "D107",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "D104"]
"**/test_*.py" = [
    "PLC1901",
    "PLR2004",
    "C901",
]
"camayoc/data_provider.py" = ["PLW2901"]
"camayoc/qpc_models.py" = ["PL", "C901"]
"camayoc/tests/qpc/ui/conftest.py" = ["BLE001"]
"camayoc/tests/qpc/utils.py" = ["PLW2901"]
"tests/test_command.py" = ["F401"]

[tool.ruff.lint.isort]
force-single-line = true
known-first-party = [
    "camayoc",
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pydocstyle]
convention = "pep257"

# this section should generally be the same as in quipucords repository
# uv is installed during Jenkins agent image generation. Version specified
# here should be matched by version available in image.
[tool.uv]
package = true
required-version = ">=0.6.11,<0.7"
environments = [
    "implementation_name == 'cpython' and (sys_platform == 'linux' or sys_platform == 'darwin')",
]
